//npx prisma migrate save --experimental (save prisma data model)
//npx prisma migrate up --experimental (apply migration to database)
//npx prisma generate (Regenerate prisma client to see new changes added and expose CRUD queries to the new models)

// 1. Manually adjust your Prisma data model.
// 2. Migrate your database using the prisma migrate CLI commands we covered.
// 3. (Re-)generate Prisma Client
// 4. Use Prisma Client in your application code to access your database.

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Client {
  id         Int    @id @default(autoincrement())
  first_name String
  last_name  String
  age        Int
  phone      String
  email      String @unique
  password   String

  // Relations
  receipts Receipt[]
}

model Owner {
  id         Int    @id @default(autoincrement())
  first_name String
  last_name  String
  age        Int
  phone      String
  email      String @unique
  password   String

  // Relations
  storeowned Store @relation(fields: [storeid], references: [id])
  storeid    Int
}

model Produce {
  id       Int    @id @default(autoincrement())
  name     String
  quantity Int
  price    Float
  foodtype foodtype

  // Relations
  store   Store     @relation(fields: [storeid], references: [id])
  storeid Int
  receiptsContainingProduce Receipt[] // Many to many
}

enum foodtype {
  FRUIT
  VEGETABLE
}

model Receipt {
  id       Int   @id @default(autoincrement())
  subtotal Float
  total    Float

  // Relations
  client   Client    @relation(fields: [clientid], references: [id])
  clientid Int
  store    Store     @relation(fields: [storeid], references: [id])
  storeid  Int
  produces Produce[] // Many to many
}

model Store {
  id         Int    @id @default(autoincrement())
  name       String
  address    String
  email      String @unique
  storeowner String
  city       String
  province   String
  phone      String

  // Relations
  receipts Receipt[]
  produces  Produce[]
}
